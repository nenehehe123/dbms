-- Step 1: Create dept_details Table
CREATE TABLE dept_details (
    dept_no INT PRIMARY KEY,
    dept_name VARCHAR(50),
    location VARCHAR(50)
);

-- Insert Sample Departments
INSERT INTO dept_details VALUES
(1, 'CSE', 'Chennai'),
(2, 'ECE', 'Bangalore');

-- Step 2: Create assessment Table
CREATE TABLE assessment (
    reg_no INT PRIMARY KEY,
    name VARCHAR(50),
    mark1 INT,
    mark2 INT,
    mark3 INT,
    total INT
);

-- Step 3: PL/pgSQL Function to Print Grade
CREATE OR REPLACE FUNCTION get_grade(marks INT)
RETURNS VARCHAR AS $$
BEGIN
    IF marks BETWEEN 91 AND 100 THEN
        RETURN 'A';
    ELSIF marks BETWEEN 81 AND 90 THEN
        RETURN 'B';
    ELSIF marks BETWEEN 71 AND 80 THEN
        RETURN 'C';
    ELSIF marks BETWEEN 60 AND 70 THEN
        RETURN 'D';
    ELSE
        RETURN 'E';
    END IF;
END;
$$ LANGUAGE plpgsql;

-- Example Call:
-- SELECT get_grade(85); -- Output: B

-- Step 4: Trigger Function to Prevent NULL Insertion
CREATE OR REPLACE FUNCTION validate_assessment_data()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.name IS NULL OR NEW.mark1 IS NULL OR NEW.mark2 IS NULL OR NEW.mark3 IS NULL THEN
        RAISE EXCEPTION 'NULL values not allowed in assessment';
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Step 5: Create Trigger
CREATE TRIGGER prevent_null_insert
BEFORE INSERT ON assessment
FOR EACH ROW
EXECUTE FUNCTION validate_assessment_data();
