-- Create table
CREATE TABLE book (
    book_name VARCHAR(100),
    author_name VARCHAR(100),
    price NUMERIC(8,2),
    quantity INT
);

-- Insert sample data
INSERT INTO book VALUES
('Database for Dummies', 'John Smith', 300.00, 5),
('Advanced SQL', 'Alice Green', 500.00, 3),
('Data Mining', 'Andrew White', 450.00, 2),
('AI Basics', 'Alex Stone', 350.00, 4),
('Analytics 101', 'Alice Green', 400.00, 6);

-- 1. Update the quantity by doubling it
UPDATE book SET quantity = quantity * 2;

-- 2. List all book names whose price is greater than 'Database for Dummies'
SELECT book_name
FROM book
WHERE price > (
    SELECT price FROM book WHERE book_name = 'Database for Dummies'
);

-- 3. Retrieve author names starting with 'a' (case-insensitive) with book name and price
SELECT author_name, book_name, price
FROM book
WHERE LOWER(author_name) LIKE 'a%';

-- 4. PL/pgSQL Procedure to count books by the same author
CREATE OR REPLACE PROCEDURE count_books_by_author(author_input VARCHAR)
LANGUAGE plpgsql
AS $$
DECLARE
    book_count INT;
BEGIN
    SELECT COUNT(*) INTO book_count
    FROM book
    WHERE author_name = author_input;
    
    RAISE NOTICE 'Total books by %: %', author_input, book_count;
END;
$$;

-- Call the procedure
CALL count_books_by_author('Alice Green');
