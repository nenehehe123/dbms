-- Step 1: Create Tables
CREATE TABLE Customer (
    Custid INT PRIMARY KEY,
    Custname VARCHAR(100),
    Age INT,
    phone VARCHAR(15)
);

CREATE TABLE Loan (
    Loanid INT PRIMARY KEY,
    Amount NUMERIC,
    Custid INT REFERENCES Customer(Custid),
    EMI NUMERIC
);

---insert values for lab output----
INSERT INTO Customer (Custid, Custname, Age, phone) VALUES
(1, 'Alice', 30, '9876543210'),
(2, 'Bob', 40, '8765432109'),
(3, 'Charlie', 25, '7654321098'),
(4, 'Diana', 35, '6543210987'),
(5, 'Ethan', 28, '5432109876');

INSERT INTO Loan (Loanid, Amount, Custid, EMI) VALUES
(101, 40000, 1, 4000),
(102, 60000, 2, 5000),
(103, 80000, 3, 6500),
(104, 30000, 1, 2800),
(105, 70000, 2, 6000);

------------------------------------
-- Step 2: Query - Customers with loan > 50,000
SELECT Custname 
FROM Customer 
JOIN Loan ON Customer.Custid = Loan.Custid 
WHERE Amount > 50000;

-- Step 3: Query - Customers with no loan
SELECT Custid 
FROM Customer 
LEFT JOIN Loan ON Customer.Custid = Loan.Custid 
WHERE Loanid IS NULL;

-- Step 4: Query - Total loan count
SELECT COUNT(*) AS TotalLoans FROM Loan;

-- Step 5: Procedure - Get Amount and Custid using Loanid
CREATE OR REPLACE PROCEDURE GetLoanDetails(IN lid INT)
LANGUAGE plpgsql
AS $$
DECLARE
    amt NUMERIC;
    cid INT;
BEGIN
    SELECT Amount, Custid INTO amt, cid FROM Loan WHERE Loanid = lid;
    RAISE NOTICE 'Amount: %, Customer ID: %', amt, cid;
END;
$$;

-- Call Example:
-- CALL GetLoanDetails(101);
